version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
      target: development
    volumes:
      - .:/app
      - /app/venv
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_URL=postgresql://omnimind:omnimind@postgres:5432/omnimind
    depends_on:
      - redis
      - postgres
    command: uvicorn src.services.api.api:app --host 0.0.0.0 --port 8000 --reload

  ml:
    build:
      context: .
      dockerfile: services/ml/Dockerfile
      target: development
    volumes:
      - .:/app
      - /app/venv
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
      - OLLAMA_HOST=http://ollama:11434
      - USE_GPU=${USE_GPU:-false}
    depends_on:
      - ollama
    command: uvicorn src.services.ml.api:app --host 0.0.0.0 --port 8000 --reload

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - USE_GPU=${USE_GPU:-false}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          cpus: '4'
          memory: 8G

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=omnimind
      - POSTGRES_PASSWORD=omnimind
      - POSTGRES_DB=omnimind
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  ollama_data: 